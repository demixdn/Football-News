apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName

        buildConfigField "long", "TIMESTAMP", System.currentTimeMillis() + "L"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'            //Some libraries have issues with this.
        disable 'OldTargetApi'
        //Lint gives this warning but SDK 20 would be Android L Beta.
        disable 'IconDensities'             //For testing purpose. This is safe to remove.
        disable 'IconMissingDensityFolder'  //For testing purpose. This is safe to remove.
    }
}

dependencies {
    def appDependencies = rootProject.ext.appDependencies
    compile appDependencies.appcompat_v7
    compile appDependencies.design
    compile appDependencies.supportAnnotations
    compile appDependencies.recyclerView
    compile appDependencies.cardView
    compile appDependencies.guava
    compile appDependencies.rxJava
    compile appDependencies.rxAndroid
    compile appDependencies.roundedimageview
    compile appDependencies.glide
    compile appDependencies.butterKnife
    apt appDependencies.butterKnifeCompiler
    compile project(':business')
    debugCompile project(path: ':data', configuration:'stagingDebug')
    releaseCompile project(path: ':data', configuration:'stagingRelease')
}
